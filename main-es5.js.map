{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","button1","emptyText","newName","newQ","productList","alert","push","buy","addProduct","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Supermarket APP';\n  button1 = false;\n  emptyText = \"There are no products in your list.\"\n  newName=\"\";\n  newQ=\"\";\n  productList: any[] = [\n    {\"name\": \"Bread\",\n    \"Q\": \"4\"},\n    {\"name\": \"Tomato\",\n    \"Q\": \"1\"},\n    {\"name\": \"Water\",\n    \"Q\": \"2\"},\n    {\"name\": \"Soap\",\n    \"Q\": \"5\"},\n    {\"name\": \"Rice\",\n    \"Q\": \"3\"},\n    {\"name\": \"Wine\",\n    \"Q\": \"8\"},\n  ];\n  addProduct(){\n    if(this.newName==\"\" || this.newQ==\"\"){\n      alert(\"Impossible to add an incomplete product\");\n    }\n    else{\n    this.button1=false;\n    this.productList.push({\"name\": this.newName, \"Q\":this.newQ});\n    this.newName=\"\";\n    this.newQ=\"\";\n    alert(\"Product was successfully added\");\n    }\n  };\n\n  buy(){\n    alert(\"All products have been bought successfully! The product list is empty now!\");\n    this.productList=[];\n    this.button1=true;\n  }\n}\n","\n<h1 [ngStyle]=\"{'color':'green'}\"> {{title}} </h1>\n\n\n<div id=\"products\">\n<button (click)=\"buy()\" [disabled] = \"button1\"> Buy all products! </button>\n<h3> Product List (Name -- Quantity) </h3>\n\n<h2 *ngIf=\"button1\"> {{emptyText}}</h2>\n<ul>\n  <li *ngFor=\"let product of productList\"> {{product.name}} -- {{product.Q}}</li>\n</ul>\n</div>\n\n<div id=\"new\">\n<h3 [ngStyle]=\"{'color':'blue', 'text-decoration': 'underline'}\" > Add a new product </h3>\nName: <input type=\"text\" name=\"productName\" [(ngModel)]=\"newName\">\nQuantity: <input type=\"number\" name=\"productQ\" [(ngModel)]=\"newQ\">\n<button (click)=\"addProduct()\"> Add new product to the list </button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}